// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cafe.proto

package cafe

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMenusReply struct {
	Menus                []*Menu  `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMenusReply) Reset()         { *m = GetMenusReply{} }
func (m *GetMenusReply) String() string { return proto.CompactTextString(m) }
func (*GetMenusReply) ProtoMessage()    {}
func (*GetMenusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d9dc639eeba0ca, []int{0}
}

func (m *GetMenusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMenusReply.Unmarshal(m, b)
}
func (m *GetMenusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMenusReply.Marshal(b, m, deterministic)
}
func (m *GetMenusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMenusReply.Merge(m, src)
}
func (m *GetMenusReply) XXX_Size() int {
	return xxx_messageInfo_GetMenusReply.Size(m)
}
func (m *GetMenusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMenusReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMenusReply proto.InternalMessageInfo

func (m *GetMenusReply) GetMenus() []*Menu {
	if m != nil {
		return m.Menus
	}
	return nil
}

type Menu struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price                int32    `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Menu) Reset()         { *m = Menu{} }
func (m *Menu) String() string { return proto.CompactTextString(m) }
func (*Menu) ProtoMessage()    {}
func (*Menu) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d9dc639eeba0ca, []int{1}
}

func (m *Menu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Menu.Unmarshal(m, b)
}
func (m *Menu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Menu.Marshal(b, m, deterministic)
}
func (m *Menu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Menu.Merge(m, src)
}
func (m *Menu) XXX_Size() int {
	return xxx_messageInfo_Menu.Size(m)
}
func (m *Menu) XXX_DiscardUnknown() {
	xxx_messageInfo_Menu.DiscardUnknown(m)
}

var xxx_messageInfo_Menu proto.InternalMessageInfo

func (m *Menu) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Menu) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type OrderRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d9dc639eeba0ca, []int{2}
}

func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (m *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(m, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OrderReply struct {
	Price                int32    `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderReply) Reset()         { *m = OrderReply{} }
func (m *OrderReply) String() string { return proto.CompactTextString(m) }
func (*OrderReply) ProtoMessage()    {}
func (*OrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d9dc639eeba0ca, []int{3}
}

func (m *OrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderReply.Unmarshal(m, b)
}
func (m *OrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderReply.Marshal(b, m, deterministic)
}
func (m *OrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderReply.Merge(m, src)
}
func (m *OrderReply) XXX_Size() int {
	return xxx_messageInfo_OrderReply.Size(m)
}
func (m *OrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_OrderReply proto.InternalMessageInfo

func (m *OrderReply) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func init() {
	proto.RegisterType((*GetMenusReply)(nil), "cafe.GetMenusReply")
	proto.RegisterType((*Menu)(nil), "cafe.Menu")
	proto.RegisterType((*OrderRequest)(nil), "cafe.OrderRequest")
	proto.RegisterType((*OrderReply)(nil), "cafe.OrderReply")
}

func init() { proto.RegisterFile("cafe.proto", fileDescriptor_a4d9dc639eeba0ca) }

var fileDescriptor_a4d9dc639eeba0ca = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x4f, 0xc1, 0x4a, 0xc5, 0x30,
	0x10, 0x34, 0x9a, 0x88, 0xae, 0x0a, 0xb2, 0x8a, 0x94, 0x7a, 0x09, 0x39, 0xf5, 0x94, 0xea, 0xf3,
	0xe4, 0x59, 0xc4, 0x93, 0x08, 0xf9, 0x83, 0xbe, 0xe7, 0xf6, 0x21, 0xbc, 0x36, 0x31, 0x4d, 0x0f,
	0xfd, 0x7b, 0x49, 0x62, 0xa5, 0x05, 0x6f, 0x3b, 0xbb, 0x33, 0xb3, 0x33, 0x00, 0xbb, 0xa6, 0x25,
	0xed, 0xbc, 0x0d, 0x16, 0x79, 0x9c, 0xcb, 0xfb, 0xbd, 0xb5, 0xfb, 0x03, 0xd5, 0x69, 0xb7, 0x1d,
	0xdb, 0x9a, 0x3a, 0x17, 0xa6, 0x4c, 0x51, 0x8f, 0x70, 0xf5, 0x46, 0xe1, 0x9d, 0xfa, 0x71, 0x30,
	0xe4, 0x0e, 0x13, 0x4a, 0x10, 0x5d, 0x44, 0x05, 0x93, 0x27, 0xd5, 0xc5, 0x06, 0x74, 0xf2, 0x8b,
	0x04, 0x93, 0x0f, 0xea, 0x01, 0x78, 0x84, 0x88, 0xc0, 0xfb, 0xa6, 0xa3, 0x82, 0x49, 0x56, 0x9d,
	0x9b, 0x34, 0xe3, 0x2d, 0x08, 0xe7, 0xbf, 0x76, 0x54, 0x1c, 0x4b, 0x56, 0x09, 0x93, 0x81, 0x52,
	0x70, 0xf9, 0xe1, 0x3f, 0xc9, 0x1b, 0xfa, 0x1e, 0x69, 0x08, 0xff, 0x29, 0x95, 0x02, 0xf8, 0xe5,
	0xc4, 0x14, 0x7f, 0x3e, 0x6c, 0xe1, 0xb3, 0xf1, 0xc0, 0x5f, 0x9a, 0x96, 0xf0, 0x19, 0xce, 0xe6,
	0xd0, 0x78, 0xa7, 0x73, 0x3d, 0x3d, 0xd7, 0xd3, 0xaf, 0xb1, 0x5e, 0x79, 0x93, 0x83, 0xaf, 0xca,
	0xa9, 0x23, 0xac, 0x41, 0xa4, 0x37, 0x88, 0xf9, 0xbe, 0xcc, 0x55, 0x5e, 0xaf, 0x76, 0x49, 0xb0,
	0x3d, 0x4d, 0xbe, 0x4f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xce, 0xf5, 0xd2, 0x58, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CafeClient is the client API for Cafe service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CafeClient interface {
	GetMenus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetMenusReply, error)
	Order(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderReply, error)
}

type cafeClient struct {
	cc *grpc.ClientConn
}

func NewCafeClient(cc *grpc.ClientConn) CafeClient {
	return &cafeClient{cc}
}

func (c *cafeClient) GetMenus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetMenusReply, error) {
	out := new(GetMenusReply)
	err := c.cc.Invoke(ctx, "/cafe.Cafe/GetMenus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cafeClient) Order(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderReply, error) {
	out := new(OrderReply)
	err := c.cc.Invoke(ctx, "/cafe.Cafe/Order", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CafeServer is the server API for Cafe service.
type CafeServer interface {
	GetMenus(context.Context, *empty.Empty) (*GetMenusReply, error)
	Order(context.Context, *OrderRequest) (*OrderReply, error)
}

// UnimplementedCafeServer can be embedded to have forward compatible implementations.
type UnimplementedCafeServer struct {
}

func (*UnimplementedCafeServer) GetMenus(ctx context.Context, req *empty.Empty) (*GetMenusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMenus not implemented")
}
func (*UnimplementedCafeServer) Order(ctx context.Context, req *OrderRequest) (*OrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Order not implemented")
}

func RegisterCafeServer(s *grpc.Server, srv CafeServer) {
	s.RegisterService(&_Cafe_serviceDesc, srv)
}

func _Cafe_GetMenus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CafeServer).GetMenus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cafe.Cafe/GetMenus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CafeServer).GetMenus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cafe_Order_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CafeServer).Order(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cafe.Cafe/Order",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CafeServer).Order(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cafe_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cafe.Cafe",
	HandlerType: (*CafeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMenus",
			Handler:    _Cafe_GetMenus_Handler,
		},
		{
			MethodName: "Order",
			Handler:    _Cafe_Order_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cafe.proto",
}
